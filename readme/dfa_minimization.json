{"id":307275643,"node_id":"MDEwOlJlcG9zaXRvcnkzMDcyNzU2NDM=","name":"dfa_minimization","full_name":"Andersama/dfa_minimization","private":false,"owner":{"login":"Andersama","id":25020235,"node_id":"MDQ6VXNlcjI1MDIwMjM1","avatar_url":"https://avatars.githubusercontent.com/u/25020235?v=4","gravatar_id":"","url":"https://api.github.com/users/Andersama","html_url":"https://github.com/Andersama","followers_url":"https://api.github.com/users/Andersama/followers","following_url":"https://api.github.com/users/Andersama/following{/other_user}","gists_url":"https://api.github.com/users/Andersama/gists{/gist_id}","starred_url":"https://api.github.com/users/Andersama/starred{/owner}{/repo}","subscriptions_url":"https://api.github.com/users/Andersama/subscriptions","organizations_url":"https://api.github.com/users/Andersama/orgs","repos_url":"https://api.github.com/users/Andersama/repos","events_url":"https://api.github.com/users/Andersama/events{/privacy}","received_events_url":"https://api.github.com/users/Andersama/received_events","type":"User","site_admin":false},"html_url":"https://github.com/Andersama/dfa_minimization","description":null,"fork":false,"url":"https://api.github.com/repos/Andersama/dfa_minimization","forks_url":"https://api.github.com/repos/Andersama/dfa_minimization/forks","keys_url":"https://api.github.com/repos/Andersama/dfa_minimization/keys{/key_id}","collaborators_url":"https://api.github.com/repos/Andersama/dfa_minimization/collaborators{/collaborator}","teams_url":"https://api.github.com/repos/Andersama/dfa_minimization/teams","hooks_url":"https://api.github.com/repos/Andersama/dfa_minimization/hooks","issue_events_url":"https://api.github.com/repos/Andersama/dfa_minimization/issues/events{/number}","events_url":"https://api.github.com/repos/Andersama/dfa_minimization/events","assignees_url":"https://api.github.com/repos/Andersama/dfa_minimization/assignees{/user}","branches_url":"https://api.github.com/repos/Andersama/dfa_minimization/branches{/branch}","tags_url":"https://api.github.com/repos/Andersama/dfa_minimization/tags","blobs_url":"https://api.github.com/repos/Andersama/dfa_minimization/git/blobs{/sha}","git_tags_url":"https://api.github.com/repos/Andersama/dfa_minimization/git/tags{/sha}","git_refs_url":"https://api.github.com/repos/Andersama/dfa_minimization/git/refs{/sha}","trees_url":"https://api.github.com/repos/Andersama/dfa_minimization/git/trees{/sha}","statuses_url":"https://api.github.com/repos/Andersama/dfa_minimization/statuses/{sha}","languages_url":"https://api.github.com/repos/Andersama/dfa_minimization/languages","stargazers_url":"https://api.github.com/repos/Andersama/dfa_minimization/stargazers","contributors_url":"https://api.github.com/repos/Andersama/dfa_minimization/contributors","subscribers_url":"https://api.github.com/repos/Andersama/dfa_minimization/subscribers","subscription_url":"https://api.github.com/repos/Andersama/dfa_minimization/subscription","commits_url":"https://api.github.com/repos/Andersama/dfa_minimization/commits{/sha}","git_commits_url":"https://api.github.com/repos/Andersama/dfa_minimization/git/commits{/sha}","comments_url":"https://api.github.com/repos/Andersama/dfa_minimization/comments{/number}","issue_comment_url":"https://api.github.com/repos/Andersama/dfa_minimization/issues/comments{/number}","contents_url":"https://api.github.com/repos/Andersama/dfa_minimization/contents/{+path}","compare_url":"https://api.github.com/repos/Andersama/dfa_minimization/compare/{base}...{head}","merges_url":"https://api.github.com/repos/Andersama/dfa_minimization/merges","archive_url":"https://api.github.com/repos/Andersama/dfa_minimization/{archive_format}{/ref}","downloads_url":"https://api.github.com/repos/Andersama/dfa_minimization/downloads","issues_url":"https://api.github.com/repos/Andersama/dfa_minimization/issues{/number}","pulls_url":"https://api.github.com/repos/Andersama/dfa_minimization/pulls{/number}","milestones_url":"https://api.github.com/repos/Andersama/dfa_minimization/milestones{/number}","notifications_url":"https://api.github.com/repos/Andersama/dfa_minimization/notifications{?since,all,participating}","labels_url":"https://api.github.com/repos/Andersama/dfa_minimization/labels{/name}","releases_url":"https://api.github.com/repos/Andersama/dfa_minimization/releases{/id}","deployments_url":"https://api.github.com/repos/Andersama/dfa_minimization/deployments","created_at":"2020-10-26T06:03:23Z","updated_at":"2020-10-27T04:38:44Z","pushed_at":"2020-10-27T04:38:42Z","git_url":"git://github.com/Andersama/dfa_minimization.git","ssh_url":"git@github.com:Andersama/dfa_minimization.git","clone_url":"https://github.com/Andersama/dfa_minimization.git","svn_url":"https://github.com/Andersama/dfa_minimization","homepage":null,"size":9,"stargazers_count":0,"watchers_count":0,"language":"C++","has_issues":true,"has_projects":true,"has_downloads":true,"has_wiki":true,"has_pages":false,"forks_count":0,"mirror_url":null,"archived":false,"disabled":false,"open_issues_count":0,"license":null,"allow_forking":true,"forks":0,"open_issues":0,"watchers":0,"default_branch":"master","content":"<h1>dfa_minimization</h1>\n<p>This toy~ish header implements a dfa minimization function</p>\n<p>For example, below we have a dfa state machine where states 0 and 2 are equivalent. Although 4 has the same transitions it is different because it is an accepting state, the algorithm works by partitioning differently behaving states (after having removed dead / unreachable ones).</p>\n<pre><code class=\"hljs language-c\">    <span class=\"hljs-function\"><span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">vector</span>&#x3C;cmp_lexer::cmp_state> <span class=\"hljs-title\">states</span><span class=\"hljs-params\">(<span class=\"hljs-number\">5</span>, cmp_lexer::cmp_state{})</span></span>;\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">size_t</span> i = <span class=\"hljs-number\">0</span>; i &#x3C; states.size(); i++) {\n        states[i].state_id   = i;\n        states[i].default_to = states.size();\n        <span class=\"hljs-comment\">//add two transitions</span>\n        states[i].transitions.emplace_back();\n        states[i].transitions.emplace_back();\n    }\n    states[<span class=\"hljs-number\">0</span>].transitions     = {{<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">1</span>}, {<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>}};\n    states[<span class=\"hljs-number\">1</span>].transitions     = {{<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">1</span>}, {<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">3</span>}};\n    states[<span class=\"hljs-number\">2</span>].transitions     = {{<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">1</span>}, {<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>}};\n    states[<span class=\"hljs-number\">3</span>].transitions     = {{<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">1</span>}, {<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">4</span>}};\n    states[<span class=\"hljs-number\">4</span>].transitions     = {{<span class=\"hljs-number\">0</span>, <span class=\"hljs-number\">1</span>}, {<span class=\"hljs-number\">1</span>, <span class=\"hljs-number\">2</span>}};\n    states.back().state_flags = (<span class=\"hljs-keyword\">uint8_t</span>)cmp_lexer::cmp_flags::is_accepting;\n\n    <span class=\"hljs-built_in\">std</span>::<span class=\"hljs-built_in\">vector</span>&#x3C;cmp_lexer::cmp_state> min_states = cmp_lexer::minimized_table(states, <span class=\"hljs-number\">0</span>);\n    <span class=\"hljs-comment\">//print the old unoptimized table</span>\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">size_t</span> i = <span class=\"hljs-number\">0</span>; i &#x3C; states.size(); i++) {\n        fmt::print(<span class=\"hljs-string\">\"[{}]: \"</span>sv, states[i].state_id);\n        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">size_t</span> t = <span class=\"hljs-number\">0</span>; t &#x3C; states[i].transitions.size(); t++) {\n            fmt::print(<span class=\"hljs-string\">\"[given:{}, goto:{}] \"</span>sv, states[i].transitions[t].input, states[i].transitions[t].to);\n        }\n        <span class=\"hljs-keyword\">if</span> (states[i].state_flags &#x26; (<span class=\"hljs-keyword\">uint8_t</span>)cmp_lexer::cmp_flags::is_accepting)\n            fmt::print(<span class=\"hljs-string\">\"-> accepting\"</span>sv);\n        <span class=\"hljs-keyword\">if</span> (states[i].state_flags &#x26; (<span class=\"hljs-keyword\">uint8_t</span>)cmp_lexer::cmp_flags::is_rejecting) <span class=\"hljs-comment\">//?</span>\n            fmt::print(<span class=\"hljs-string\">\"-> rejecting\"</span>sv);\n        fmt::print(<span class=\"hljs-string\">\"\\n\"</span>sv);\n    }\n    fmt::print(<span class=\"hljs-string\">\"\\n\\n\"</span>sv);\n    <span class=\"hljs-comment\">//print the new optimized table</span>\n    <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">size_t</span> i = <span class=\"hljs-number\">0</span>; i &#x3C; min_states.size(); i++) {\n        fmt::print(<span class=\"hljs-string\">\"[{}]: \"</span>sv, min_states[i].state_id);\n        <span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">size_t</span> t = <span class=\"hljs-number\">0</span>; t &#x3C; min_states[i].transitions.size(); t++) {\n            fmt::print(<span class=\"hljs-string\">\"[given:{}, goto:{}] \"</span>sv, min_states[i].transitions[t].input, min_states[i].transitions[t].to);\n        }\n        <span class=\"hljs-keyword\">if</span> (min_states[i].state_flags &#x26; (<span class=\"hljs-keyword\">uint8_t</span>)cmp_lexer::cmp_flags::is_accepting)\n            fmt::print(<span class=\"hljs-string\">\"-> accepting\"</span>sv);\n        <span class=\"hljs-keyword\">if</span> (min_states[i].state_flags &#x26; (<span class=\"hljs-keyword\">uint8_t</span>)cmp_lexer::cmp_flags::is_rejecting) <span class=\"hljs-comment\">//?</span>\n            fmt::print(<span class=\"hljs-string\">\"-> rejecting\"</span>sv);\n        fmt::print(<span class=\"hljs-string\">\"\\n\"</span>sv);\n    }\n</code></pre>\n<p>The result is printed as below:</p>\n<pre><code class=\"hljs language-json\">[<span class=\"hljs-number\">0</span>]: [given:<span class=\"hljs-number\">0</span>, goto:<span class=\"hljs-number\">1</span>] [given:<span class=\"hljs-number\">1</span>, goto:<span class=\"hljs-number\">2</span>]\n[<span class=\"hljs-number\">1</span>]: [given:<span class=\"hljs-number\">0</span>, goto:<span class=\"hljs-number\">1</span>] [given:<span class=\"hljs-number\">1</span>, goto:<span class=\"hljs-number\">3</span>]\n[<span class=\"hljs-number\">2</span>]: [given:<span class=\"hljs-number\">0</span>, goto:<span class=\"hljs-number\">1</span>] [given:<span class=\"hljs-number\">1</span>, goto:<span class=\"hljs-number\">2</span>]\n[<span class=\"hljs-number\">3</span>]: [given:<span class=\"hljs-number\">0</span>, goto:<span class=\"hljs-number\">1</span>] [given:<span class=\"hljs-number\">1</span>, goto:<span class=\"hljs-number\">4</span>]\n[<span class=\"hljs-number\">4</span>]: [given:<span class=\"hljs-number\">0</span>, goto:<span class=\"hljs-number\">1</span>] [given:<span class=\"hljs-number\">1</span>, goto:<span class=\"hljs-number\">2</span>] -> accepting\n\n\n[<span class=\"hljs-number\">0</span>]: [given:<span class=\"hljs-number\">0</span>, goto:<span class=\"hljs-number\">3</span>] [given:<span class=\"hljs-number\">1</span>, goto:<span class=\"hljs-number\">0</span>]\n[<span class=\"hljs-number\">3</span>]: [given:<span class=\"hljs-number\">0</span>, goto:<span class=\"hljs-number\">3</span>] [given:<span class=\"hljs-number\">1</span>, goto:<span class=\"hljs-number\">2</span>]\n[<span class=\"hljs-number\">2</span>]: [given:<span class=\"hljs-number\">0</span>, goto:<span class=\"hljs-number\">3</span>] [given:<span class=\"hljs-number\">1</span>, goto:<span class=\"hljs-number\">1</span>]\n[<span class=\"hljs-number\">1</span>]: [given:<span class=\"hljs-number\">0</span>, goto:<span class=\"hljs-number\">3</span>] [given:<span class=\"hljs-number\">1</span>, goto:<span class=\"hljs-number\">0</span>] -> accepting\n</code></pre>"}